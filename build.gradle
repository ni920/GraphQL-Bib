plugins {
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.graphql-java.tutorial'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

springBoot {
	mainClass = 'com.bib.BibApplication'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:12.0.0'
	implementation 'com.graphql-java:graphiql-spring-boot-starter:5.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
}

// Docker Image Build
jib {
	from {
		image = 'adoptopenjdk/openjdk11:jre-11.0.8_10-alpine'
	}
	to {
		image = 'ghcr.io/ni920/graphql-bib/graphqlbib:0.1.0'
		//credHelper = 'osxkeychain'
		tags = ['latest']
		//containerizingMode = 'packaged'

	}
	container {
		//jvmFlags = ['-Dmy.property=example.value', '-Xms512m', '-Xdebug']
		mainClass = 'com.bib.BibApplication'
		ports = ['8090']
		format = 'OCI'
		creationTime = 'USE_CURRENT_TIMESTAMP'

	}
}